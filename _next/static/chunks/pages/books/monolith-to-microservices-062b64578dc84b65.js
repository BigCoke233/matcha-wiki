(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[930],{7579:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/books/monolith-to-microservices",function(){return s(2443)}])},7715:function(e,n,s){"use strict";s.d(n,{Z:function(){return u}});var i=s(5893);s(7294);let r="My detailed reading notes from computer science books",l="/reading-notes";var t=s(1163),o=s(5675),a=s.n(o);let c={logo:(0,i.jsx)(function(){return(0,i.jsx)(a(),{src:"".concat(l,"/logo.png"),alt:"Reading notes homepage",width:30,height:30})},{}),project:{link:"https://github.com/mkrtchian/reading-notes"},docsRepositoryBase:"https://github.com/mkrtchian/reading-notes/blob/main",footer:{text:"Made by Roman Mkrtchian"},head:function(){let e="Reading notes";return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("meta",{name:"msapplication-TileColor",content:"#fff"}),(0,i.jsx)("meta",{httpEquiv:"Content-Language",content:"en"}),(0,i.jsx)("meta",{name:"description",content:r}),(0,i.jsx)("meta",{property:"og:title",content:e}),(0,i.jsx)("meta",{property:"og:description",content:r}),(0,i.jsx)("meta",{name:"apple-mobile-web-app-title",content:e}),(0,i.jsx)("link",{rel:"icon",type:"image/x-icon",href:"".concat(l,"/favicon.ico")})]})},feedback:{content:()=>(0,i.jsx)(i.Fragment,{children:"Question? Give me feedback →"}),labels:"feedback"},useNextSeoProps:function(){let{route:e}=(0,t.useRouter)(),n={description:r};return"/"!==e?n.titleTemplate="%s – Reading notes":n.titleTemplate="%s",n},i18n:[]};var u=c},2443:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return a.Z}});var i=s(5893),r=s(8808),l=s(7928),t=s(7715);s(5513);var o=s(1151);s(5675);var a=s(2243);function c(e){let n=Object.assign({h1:"h1",h2:"h2",ul:"ul",li:"li",strong:"strong",em:"em",a:"a",h3:"h3",code:"code"},(0,o.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{children:"Monolith to Microservices: : Evolutionary Patterns to Transform Your Monolith"}),"\n",(0,i.jsx)(n.h2,{id:"1---just-enough-microservices",children:"1 - Just Enough Microservices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les microservices sont un type particulier de service-oriented architecture (SOA).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ils exposent une API via le r\xe9seau, donc forment une architecture distribu\xe9e."}),"\n",(0,i.jsxs)(n.li,{children:["Il sont ",(0,i.jsx)(n.strong,{children:"d\xe9ployables ind\xe9pendamment"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il s’agit d’\xeatre en mesure de modifier et d\xe9ployer un seul service sans toucher aux autres."}),"\n",(0,i.jsxs)(n.li,{children:["Le conseil de l’auteur est d’",(0,i.jsx)(n.em,{children:"effectivement"})," d\xe9ployer les services ind\xe9pendamment, plut\xf4t que le tout ensemble en esp\xe9rant une ind\xe9pendance th\xe9orique."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ils sont organis\xe9s autour d’un ",(0,i.jsx)(n.strong,{children:"business domain"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le but est de rendre les changements affectant plusieurs microservices le plus rare possible, et favoriser les changement \xe0 l’int\xe9rieur du microservice."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ils gardent la ",(0,i.jsx)(n.strong,{children:"base de donn\xe9es priv\xe9e"}),", et ne l'exposent que via une API.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Partager la DB est une des pires choses \xe0 faire pour avoir une d\xe9ployabilit\xe9 ind\xe9pendante."}),"\n",(0,i.jsx)(n.li,{children:"Ne pas la partager telle quelle permet de d\xe9cider ce qu’on partage et ce qu’on ne partage pas, et aussi de garder une API publique stable tout en \xe9tant libre de faire des changements en interne."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L’exemple utilis\xe9 dans ce livre est une entreprise de vente de CD de musique.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Elle a une application organis\xe9e en 3 couches techniques : UI, backend, DB."}),"\n",(0,i.jsxs)(n.li,{children:["Chaque couche est sous la responsabilit\xe9 d’une \xe9quipe : \xe9quipe front, \xe9quipe back, \xe9quipe DB.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Et d’ailleurs cette l’architecture d\xe9coule probablement de l’organisation des \xe9quipes cf. loi de Conway."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On a donc une forte coh\xe9sion au niveau technique : s’il faut faire un travail sur un aspect technique (par exemple moderniser la UI), une seule \xe9quipe sera impact\xe9e.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mais on a une faible coh\xe9sion par domaine business, puisque l’ajout d’une fonctionnalit\xe9 n\xe9cessite l’intervention et la coordination de 3 \xe9quipes."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"A l’inverse on peut imaginer une architecture organis\xe9e autour des domaines, avec un bout de UI, un bout de backend et un bout de DB chacun, et sous la responsabilit\xe9 d’\xe9quipes pluridisciplinaires."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"microservices"})," ont de nombreux ",(0,i.jsx)(n.strong,{children:"avantages"}),", et il s’agit de comprendre lesquels on cherche \xe0 obtenir en priorit\xe9 pour orienter notre d\xe9composition de monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La possibilit\xe9 de scaler diff\xe9remment des parties du syst\xe8me, et d’obtenir de la robustesse (le syst\xe8me peut continuer \xe0 op\xe9rer m\xeame si une partie est down)."}),"\n",(0,i.jsx)(n.li,{children:"La possibilit\xe9 d’utiliser diff\xe9rentes stacks technologiques et de les faire communiquer ensemble."}),"\n",(0,i.jsx)(n.li,{children:"La possibilit\xe9 pour plusieurs \xe9quipes de travailler sur le syst\xe8me sans se marcher dessus."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les ",(0,i.jsx)(n.strong,{children:"d\xe9savantages"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les probl\xe9matiques des syst\xe8mes distribu\xe9s : la communication r\xe9seau \xe9tant significativement plus lente que la communication in-process, et les paquets pouvant se perdre, on doit faire attention \xe0 beaucoup plus de choses.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les transactions deviennent probl\xe9matiques."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Les microservices arrivent avec leurs technologies sp\xe9cifiques \xe0 ma\xeetriser, qui peuvent causer bien plus de probl\xe8mes que les syst\xe8mes classiques si elles sont mal utilis\xe9es."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"UI"})," ne doit pas \xeatre mise de c\xf4t\xe9 dans la d\xe9composition : si on veut pouvoir d\xe9ployer rapidement des features compl\xe8tes, il faut la d\xe9composer elle-aussi pour qu’elle corresponde avec les services c\xf4t\xe9 backend."]}),"\n",(0,i.jsx)(n.li,{children:"L’auteur conseille de ne pas adopter une nouvelle stack technologique pour faire la migration vers les microservices. La migration en elle-m\xeame est d\xe9j\xe0 assez difficile, il vaut mieux garder les outils qu’on conna\xeet dans un premier temps."}),"\n",(0,i.jsxs)(n.li,{children:["A propos de la ",(0,i.jsx)(n.strong,{children:"taille"})," des microservices :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["C’est un des crit\xe8res les ",(0,i.jsx)(n.strong,{children:"moins importants"}),", surtout quand on d\xe9bute avec."]}),"\n",(0,i.jsx)(n.li,{children:"Il vaut mieux s’int\xe9resser d’abord \xe0 la question de savoir combien de microservices on sera capable de g\xe9rer dans l’organisation, et comment faire en sorte de ne pas trop les coupler."}),"\n",(0,i.jsxs)(n.li,{children:["Il cite Chris Richardson qui parle d’avoir des microservices avec de petites interfaces.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["NDLR : c’est par cette id\xe9e que Vlad Khononov caract\xe9rise principalement les microservices dans ",(0,i.jsx)(n.em,{children:"Learning Domain Driven Design"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"L’id\xe9e initiale des microservices \xe9tait de les avoir si petits qu’on pourrait facilement les recoder pour les remplacer (par exemple dans une techno qui permette plus de performance/scalabilit\xe9), mais l’auteur sous-entend que ce n’est plus vraiment un crit\xe8re essentiel, en tout cas qui fait consensus."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 ownership, l’architecture en microservices favorise le mod\xe8le o\xf9 les \xe9quipes tech/produit sont au contact du client, et sont support\xe9es par d’\xe9ventuelles \xe9quipes transverses.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ca s’oppose au mod\xe8le plus traditionnel o\xf9 le “business” g\xe8re la relation avec les clients, et o\xf9 les d\xe9veloppeurs sont dans un silo \xe0 part, sans ownership r\xe9el sur un business domain de bout en bout."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le terme ",(0,i.jsx)(n.strong,{children:"monolith"})," d\xe9signe ici l’unit\xe9 de ",(0,i.jsx)(n.strong,{children:"d\xe9ploiement"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"single process monolith"})," : il s’agit d’une app single-process, qu’on peut \xe9ventuellement dupliquer pour des raisons d’availability.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"En g\xe9n\xe9ral le monolithe va au moins communiquer avec une DB, formant un syst\xe8me distribu\xe9 tr\xe8s simple."}),"\n",(0,i.jsx)(n.li,{children:"\xc7a repr\xe9sente l’essentiel des projets qui cherchent \xe0 migrer vers du microservice, donc l’auteur va se concentrer sur \xe7a."}),"\n",(0,i.jsxs)(n.li,{children:["Il est possible de r\xe9aliser un ",(0,i.jsx)(n.strong,{children:"modular monolith"})," en gardant le single-process, mais en cr\xe9ant des modules de code bien s\xe9par\xe9s.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=ISYKx8sa53g",children:"Shopify"})," est un bon exemple de modular monolith."]}),"\n",(0,i.jsx)(n.li,{children:"On a ceci dit souvent la DB dont le split en modules est n\xe9glig\xe9."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"distributed monolith"})," : on a plusieurs services communiquant \xe0 travers le r\xe9seau, mais le syst\xe8me a besoin d’\xeatre d\xe9ploy\xe9 en un bloc.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C’est un syst\xe8me qui a tous les d\xe9savantages : absence de modularisation, et syst\xe8me distribu\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"third-party black-box systems"})," : les services externes SASS qu’on utilise, ou open source qu’on installe."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"monoliths"})," ont un certain nombre de ",(0,i.jsx)(n.strong,{children:"d\xe9savantages"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les diverses parties du code ont tendance \xe0 \xeatre plus facilement coupl\xe9es."}),"\n",(0,i.jsx)(n.li,{children:"Le travail \xe0 plusieurs \xe9quipes est plus compliqu\xe9 en terme de conflit de modification, en terme de confusion d’ownership, et aussi pour savoir quand d\xe9ployer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Concernant les ",(0,i.jsx)(n.strong,{children:"avantages"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On n’a pas tous les probl\xe8mes associ\xe9s aux syst\xe8mes distribu\xe9s."}),"\n",(0,i.jsx)(n.li,{children:"Le workflow de d\xe9veloppement, le monitoring et le d\xe9bug est plus simple."}),"\n",(0,i.jsx)(n.li,{children:"On peut r\xe9utiliser du code tr\xe8s facilement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A propos du ",(0,i.jsx)(n.strong,{children:"couplage"})," et de la ",(0,i.jsx)(n.strong,{children:"coh\xe9sion"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le couplage c’est l’id\xe9e que changer une chose implique d’en changer aussi une autre. La coh\xe9sion c’est le fait de garder ensemble des choses qui ont un rapport entre-elles (et qui d’habitude changent ensemble).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour avoir un syst\xe8me facile \xe0 transformer, on a envie que le couplage soit faible, et la coh\xe9sion \xe9lev\xe9e."}),"\n",(0,i.jsx)(n.li,{children:"Par exemple, si la logique d’une fonctionnalit\xe9 est pr\xe9sente \xe0 travers plusieurs modules, on va devoir les changer tous pour la modifier (couplage \xe9lev\xe9), et les \xe9l\xe9ments de cette fonctionnalit\xe9 ne sont pas rassembl\xe9s (coh\xe9sion faible)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dans le cas sp\xe9cifique des microservices, les modules en question qu’il faut consid\xe9rer en priorit\xe9 sont les microservices eux-m\xeames, puisque modifier leurs limites co\xfbte tr\xe8s cher.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On veut donc faire en sorte que chaque changement impacte, et donc oblige le red\xe9ploiement, du moins possible de microservices."}),"\n",(0,i.jsx)(n.li,{children:"Si dans les microservices on peut se tromper dans les limites de chaque service, dans le monolithe ces limites n’existent pas naturellement, et donc on a tendance \xe0 avoir un couplage g\xe9n\xe9ralis\xe9 o\xf9 tout d\xe9pend de tout."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il y a diff\xe9rents types de couplage :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implementation coupling"})," : il s’agit d’un service qui doit changer quand on modifie l’impl\xe9mentation d’un autre service.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L’exemple typique c’est le couplage \xe0 la DB d’un autre service.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La solution c’est soit d’avoir une API pour acc\xe9der \xe0 la donn\xe9e, soit d’avoir une DB publique sp\xe9cifique pour les consommateurs externes, distincte de la DB interne du microservice."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Avoir une interface publique distincte permet aussi de concevoir cette interface pour r\xe9pondre aux besoins des consommateurs, en mode ",(0,i.jsx)(n.strong,{children:"outside-in"}),", plut\xf4t qu’imaginer ce qu’on veut exposer parmi ce qu’on a d\xe9j\xe0.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L’auteur conseille de toujours faire \xe7a : ",(0,i.jsx)(n.strong,{children:"impliquer les consommateurs dans le design de l’API publique"}),", pour que le service les serve au mieux."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Temporal coupling"})," : il s’agit de communication synchrone d\xe9pendante d’autres communications.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par exemple, si un service envoie un message \xe0 un autre service, qui doit d’abord interroger un 3\xe8me avant de r\xe9pondre. Si le 3\xe8me est down le 2\xe8me ne pourra pas r\xe9pondre.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La solution peut \xeatre pour le 2\xe8me service d’avoir les donn\xe9es du 3\xe8me en cache."}),"\n",(0,i.jsx)(n.li,{children:"Une autre solution pourrait \xeatre d'utiliser des communications asynchrones : le 3\xe8me service re\xe7oit le message asynchrone et recontacte le 2\xe8me quand il est dispo."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour plus d’infos sur le type de communications, voir le chapitre 4 de ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Building Microservices"})}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deployment coupling"})," : \xe0 chaque fois qu’on doit red\xe9ployer des services quand on en d\xe9ploie un.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Id\xe9alement on veut pouvoir d\xe9ployer le plus petit set de choses pour avoir peu de risques et un feedback rapide (et aller vers une continuous delivery)."}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.em,{children:"release trains"})," sont une mauvaise id\xe9e."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Domain coupling"})," : il s’agit des interactions indispensables li\xe9es aux fonctionnalit\xe9s elles-m\xeames.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On ne peut pas les \xe9liminer, mais on peut les agencer de telle sorte qu’elles aient un impact limit\xe9 en termes de couplage."}),"\n",(0,i.jsxs)(n.li,{children:["Par exemple, dans le cas de l’entreprise de vente de CD, le microservice de la commande doit communiquer au microservice de l'entrep\xf4t quels CD ont \xe9t\xe9 achet\xe9s et o\xf9 ils doivent \xeatre achemin\xe9s.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut r\xe9duire au maximum les informations communiqu\xe9es entre services, par exemple l’entrep\xf4t recevrait seulement les donn\xe9es de packaging et pas l’ensemble des d\xe9tails de la commande."}),"\n",(0,i.jsx)(n.li,{children:"On peut faire en sorte que la commande inclut les infos n\xe9cessaires sur l’utilisateur (dont elle aura de toute fa\xe7on besoin pour d’autres raisons) dans le message envoy\xe9 \xe0 l’entrep\xf4t, plut\xf4t qu’avoir l’entrep\xf4t faisant un autre appel pour obtenir les infos de l’utilisateur."}),"\n",(0,i.jsx)(n.li,{children:"Une autre possibilit\xe9 pourrait \xeatre que la commande \xe9mette un event, et que l'entrep\xf4t le consomme."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"Domain Driven Design"})," permet d’organiser les microservices efficacement autour de business domains.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"aggregates"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut les voir comme des repr\xe9sentations de choses r\xe9elles, avec un cycle de vie qu’on peut traiter avec une machine \xe0 \xe9tat.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple une commande, une facture, un objet en stock."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un microservice peut contenir un ou plusieurs aggregates.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si un autre microservice veut changer le contenu d’un aggregate, il doit soit envoyer un message au microservice qui en a la responsabilit\xe9, soit faire en sorte que ce microservice \xe9coute des events que lui \xe9met."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il y a de nombreux moyens d’organiser le syst\xe8me en aggregates, mais il vaut mieux commencer par celui qui colle le mieux au mod\xe8le mental des utilisateurs.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L’event storming est un bon moyen pour \xe7a."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"bounded contexts"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ils permettent de cacher l’impl\xe9mentation aux bounded contexts ext\xe9rieurs."}),"\n",(0,i.jsx)(n.li,{children:"Ils contiennent un ou plusieurs aggregates, dont certains peuvent \xeatre priv\xe9s pour l’ext\xe9rieur."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Concernant la relation avec les microservices :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Au d\xe9but on cherche de gros microservices, donc les bounded contexts sont de bons candidats."}),"\n",(0,i.jsx)(n.li,{children:"A mesure qu’on avance, on va affiner nos microservices, et opter pour un aggregate par service."}),"\n",(0,i.jsx)(n.li,{children:"A noter que le groupe de microservices autour d’un bounded context peut cacher qu’il y a en fait plusieurs microservices (ce d\xe9tail relevant de l’ordre de l’impl\xe9mentation)."}),"\n",(0,i.jsx)(n.li,{children:"NDLR : selon Vlad Khononov le microservice est de fait un bounded context, et va bien avec la taille d’un subdomain. Il ne peut pas \xeatre plus grand que le plus grand bounded context possible, ni plus petit qu’un aggregate. Mais la taille de l’aggregate marche rarement."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"2---planning-a-migration",children:"2 - Planning a Migration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut vouloir adopter les microservices pour diverses raisons, et ces raisons peuvent fortement influencer ce sur quoi on va concentrer nos efforts."}),"\n",(0,i.jsxs)(n.li,{children:["L’auteur pose en g\xe9n\xe9ral 3 questions pour aider les entreprises \xe0 ",(0,i.jsx)(n.strong,{children:"savoir si elles ont besoin des microservices"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Qu'est-ce que vous esp\xe9rez accomplir ?","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On devrait pouvoir trouver des choses qui sont align\xe9es avec les besoins business et des utilisateurs finaux."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Est-ce que vous avez consid\xe9r\xe9 des alternatives ?"}),"\n",(0,i.jsx)(n.li,{children:"Comment saurez-vous si la transition fonctionne ?"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les ",(0,i.jsx)(n.strong,{children:"raisons de choisir les microservices"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Am\xe9liorer l’autonomie des \xe9quipes / Scaler le nombre de d\xe9veloppeurs"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il est notoire que les unit\xe9s business autonomes sont plus efficaces. Et cette r\xe8gle s’applique aussi \xe0 l’\xe9chelle de l’\xe9quipe, comme le mod\xe8le d’Amazon avec les \xe9quipes \xe0 deux pizzas."}),"\n",(0,i.jsx)(n.li,{children:"Avoir le contr\xf4le exclusif sur des microservices permet aux \xe9quipes d’acqu\xe9rir de l’autonomie, et de travailler en parall\xe8le."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d’obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"monolith modulaire"})," peut r\xe9pondre \xe0 ce point, avec une certaine coordination n\xe9cessaire quand m\xeame pour le d\xe9ploiement commun."]}),"\n",(0,i.jsx)(n.li,{children:"On peut aussi penser \xe0 des approches self-service o\xf9 on provisionne des machines automatiquement au lieu d’avoir \xe0 passer par un ticket manuel aupr\xe8s d’une autre \xe9quipe."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"R\xe9duire le time to market"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le fait que les microservices permettent de d\xe9ployer sans besoin de coordination fait qu’on peut amener des changements en production plus vite."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d’obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L’auteur recommande de faire l’",(0,i.jsx)(n.strong,{children:"analyse"})," concr\xe8te du chemin et du ",(0,i.jsx)(n.strong,{children:"temps r\xe9el de chaque \xe9tape"})," entre l’id\xe9e obtenue en discovery, et la feature en production."]}),"\n",(0,i.jsx)(n.li,{children:"On trouve souvent des bottlenecks qui permettent de gagner un temps cons\xe9quent."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scaler efficacement la charge"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comme les microservices tournent dans des processus diff\xe9rents, on peut les scaler ind\xe9pendamment, et donc ma\xeetriser les co\xfbts de notre infrastructure."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d’obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut essayer de passer sur une plus grosse machine (scaling vertical)."}),"\n",(0,i.jsxs)(n.li,{children:["Faire tourner ",(0,i.jsx)(n.strong,{children:"plusieurs copies du monolithe"}),", derri\xe8re un load balancer (scaling horizontal). Le bottleneck risque d’\xeatre la DB, mais \xe7a ne co\xfbte pas tr\xe8s cher d’essayer."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Am\xe9liorer la robustesse"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comme on a plusieurs unit\xe9s ind\xe9pendantes et tournant sur des machines s\xe9par\xe9es, on peut concevoir le syst\xe8me de sorte qu’il continue \xe0 fonctionner m\xeame si certaines parties sont en \xe9chec."}),"\n",(0,i.jsx)(n.li,{children:"Attention quand m\xeame : il y a tout un effort \xe0 faire pour obtenir cette robustesse, le fait de distribuer le syst\xe8me ne suffit pas \xe0 le rendre robuste."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d’obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Faire tourner ",(0,i.jsx)(n.strong,{children:"plusieurs copies du monolithe"})," permet de r\xe9pondre \xe0 cette probl\xe9matique. Y compris par exemple dans des racks ou datacenters diff\xe9rents."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Adopter de nouvelles technologies."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les microservices \xe9tant isol\xe9s et communiquant par r\xe9seau, on peut tr\xe8s bien tester un nouveau langage, une nouvelle DB ou autre sur un seul microservice."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d’obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut parfois switcher de langage, par exemple si on utilise la JVM, on peut basculer entre les langages support\xe9s.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour les nouvelles DB c’est plus compliqu\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On peut toujours remplacer le monolithe par un nouveau avec une approche incr\xe9mentale type ",(0,i.jsx)(n.em,{children:"strangler fig"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"R\xe9utiliser des composants"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["C’est une ",(0,i.jsx)(n.strong,{children:"mauvaise raison"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["En g\xe9n\xe9ral on cherche \xe0 optimiser autre chose derri\xe8re la r\xe9utilisation, il vaut mieux se concentrer sur cette vraie raison.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, la r\xe9duction du time to market. Or le co\xfbt de coordination entre \xe9quipes peut impliquer que r\xe9\xe9crire le composant serait plus rapide."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quand ne pas adopter les microservices"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Un domaine pas tr\xe8s clair"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 on a un domaine encore jeune et pas tr\xe8s bien compris, la d\xe9composition en microservices peut impliquer de se tromper de limites, et les changer co\xfbte cher."}),"\n",(0,i.jsx)(n.li,{children:"Et donc typiquement il faut \xe9viter les microservices d\xe8s le d\xe9but."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quand on est une startup"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les microservices sont utiles pour les scale-ups ou les entreprises \xe9tablies qui ont trouv\xe9 leur product market fit. Les startups le cherchent et donc seront amen\xe9es \xe0 beaucoup changer leur produit."}),"\n",(0,i.jsx)(n.li,{children:"On peut \xe9ventuellement s\xe9parer ce qui est clairement \xe0 part dans un service, et laisser le reste dans le monolithe pour nous donner plus de temps pour le faire maturer."}),"\n",(0,i.jsx)(n.li,{children:"Il y a aussi la question de la capacit\xe9 \xe0 g\xe9rer les microservices avec les effectifs de la boite : si on a du mal \xe0 en g\xe9rer 2, en g\xe9rer 10 va \xeatre vraiment difficile."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quand le logiciel est d\xe9ploy\xe9 chez le client"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le d\xe9ploiement de microservices implique une grande complexit\xe9 au niveau de l’infrastructure. On ne peut pas attendre des clients qu’ils puissent la g\xe9rer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quand on n’a pas de bonne raison"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mine de rien c’est un des cas les plus courants o\xf9 les gens adoptent les microservices alors qu’ils ne devraient pas."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On a souvent plusieurs raisons d’adopter les microservices dans notre organisation. Il faut les ",(0,i.jsx)(n.strong,{children:"prioriser"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par exemple, on d\xe9cide qu’il nous faut des microservices pour g\xe9rer une augmentation de trafic. Puis on se dit que ce serait pas mal d’augmenter aussi l’autonomie des \xe9quipes, et d’adopter un nouveau langage.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il faut bien garder en t\xeate que c’\xe9tait l’augmentation du trafic qui \xe9tait la plus importante. Et donc si on trouve un autre moyen plus simple de r\xe9gler le probl\xe8me, peut-\xeatre que les autres raisons devront attendre."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Un bon moyen pour aider aux d\xe9cisions est de repr\xe9senter l’ensemble des raisons d’adopter les microservices avec des curseurs de 1 \xe0 5 : si on augmente le curseur pour une raison, on doit le baisser pour une autre."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour r\xe9ussir \xe0 cr\xe9er un ",(0,i.jsx)(n.strong,{children:"changement organisationnel"})," (pour mettre en place des microservices ou autre chose), l’auteur propose la m\xe9thode en 8 \xe9tapes de John Kotter, d\xe9crite plus en d\xe9tail dans son livre ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Leading Change"})}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 1 : Establishing a sense of urgency"}),". Le meilleur moment pour initier le changement c’est juste apr\xe8s une crise dont l’id\xe9e qu’on veut mettre en place r\xe8glerait le probl\xe8me sous-jacent, avec l’id\xe9e “Il faut le mettre en place ",(0,i.jsx)(n.em,{children:"maintenant"}),"”."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 2 : Creating the guiding coalition"}),". On a besoin de convaincre des personnes autour de nous. En fonction de l’impact de notre id\xe9e, il faudra avoir des personnes plus ou moins haut plac\xe9es, et typiquement des personnes du business dans le cas o\xf9 on introduit des syst\xe8mes distribu\xe9es qui vont impacter les utilisateurs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 3 : Developing a vision and strategy"}),". La vision d\xe9finit le “quoi”, elle doit donner envie mais \xeatre r\xe9aliste. La strat\xe9gie d\xe9finit le “comment”."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 4 : Communicating the change vision"}),". Il vaut mieux privil\xe9gier la communication en face \xe0 face (plut\xf4t que slack ou ce genre de chose) pour pouvoir ajuster le discours en fonction des r\xe9actions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 5 : Empowering employees for broad-based action"}),". Souvent les organisations am\xe8nent de nouvelles personnes dans l’\xe9quipe pour aider au changement en donnant de la bande passante."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 6 : Generating short-term wins"}),". Pour \xe9viter que l’engouement retombe, il faut obtenir des quick wins. \xc7a peut \xeatre par l’extraction de microservices “faciles” (\xe0 condition qu’ils aient un int\xe9r\xeat quand m\xeame)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 7 : Consolidating gains and producing more change"}),". On continue avec des changements plus profonds en fonction des succ\xe8s ou \xe9checs. \xc7a peut \xeatre la d\xe9composition de la DB qu’on ne peut pas mettre de c\xf4t\xe9 \xe9ternellement."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 8 : Anchoring new approaches in the culture"}),". A force de pratiquer la nouvelle mani\xe8re de faire, la question de savoir si c’est la bonne approche ou non dispara\xeet. Elle devient habituelle."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La d\xe9composition d’un monolithe \xe9tant une chose difficile, il faut qu’elle soit faite de mani\xe8re ",(0,i.jsx)(n.strong,{children:"incr\xe9mentale"}),". On sort un service \xe0 la fois, et on obtient du feedback pour s’am\xe9liorer sur la suite.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le feedback en question est aussi pr\xe9cieux parce que la plupart des probl\xe8mes complexes li\xe9s aux microservices sont remarqu\xe9s une fois que c’est ",(0,i.jsx)(n.strong,{children:"d\xe9ploy\xe9 en production"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Une des raisons de la m\xe9thode incr\xe9mentale est de ",(0,i.jsx)(n.strong,{children:"rendre les erreurs r\xe9versibles"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Mais il y a des d\xe9cisions qui sont plus impactantes que d’autres, et donc il faut ",(0,i.jsx)(n.strong,{children:"adapter le temps pass\xe9 \xe0 analyser \xe0 la facilit\xe9 \xe0 annuler la d\xe9cision"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exemple : changer de fournisseur cloud ou changer l’API qu’on fournit publiquement est tr\xe8s impactant, alors d'exp\xe9rimenter une librairie open source ou un nouveau langage beaucoup moins."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Certaines d\xe9cisions li\xe9es aux microservices peuvent \xeatre difficiles \xe0 d\xe9faire, par exemple annuler une migration de DB ou d\xe9faire la r\xe9\xe9criture d’une API utilis\xe9e par de nombreux consumers.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans ces cas, l’auteur recommande d’utiliser un tableau blanc pour simuler les divers use-cases et leurs cons\xe9quences en terme de communication entre services, pour voir s’il y a des probl\xe8mes apparents."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour ce qui est de savoir o\xf9 on commence, il nous faut une d\xe9composition en composants business. Et pour \xe7a on utilise le ",(0,i.jsx)(n.strong,{children:"Domain Driven Design"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La notion de ",(0,i.jsx)(n.strong,{children:"bounded context"})," et les relations entre les BCs nous permet de repr\xe9senter un d\xe9coupage possible en microservices."]}),"\n",(0,i.jsxs)(n.li,{children:["On n’a pas besoin d’un mod\xe8le super d\xe9taill\xe9 des BCs, mais d’avoir ",(0,i.jsx)(n.strong,{children:"juste assez d’information"})," pour pouvoir commencer \xe0 faire des choix. Et comme on proc\xe8de de mani\xe8re incr\xe9mentale, une erreur est vite rattrap\xe9e."]}),"\n",(0,i.jsxs)(n.li,{children:["L’",(0,i.jsx)(n.strong,{children:"event storming"})," est un outil recommand\xe9 par l’auteur pour obtenir une connaissance partag\xe9e du mod\xe8le, et pouvoir faire des choix pertinents \xe0 partir de l\xe0.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pour approfondir il y a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Introducing EventStorming"})}),", le livre pas encore termin\xe9 d’Alberto Brandolini."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour prioriser, on peut se servir du ",(0,i.jsx)(n.strong,{children:"context mapping"})," (le nom n’est pas mentionn\xe9 par l’auteur).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Un BC qui a beaucoup de liens avec d’autres BCs ne sera peut \xeatre pas le bon premier candidat pour \xeatre extrait en microservice parce qu’il impliquera beaucoup de communications r\xe9seau."}),"\n",(0,i.jsx)(n.li,{children:"A noter que le context map qu’on a \xe0 ce stade ne repr\xe9sente pas forc\xe9ment le vrai d\xe9coupage. Il va falloir regarder dans le code et v\xe9rifier ce que le BC fait dans base de donn\xe9es."}),"\n",(0,i.jsxs)(n.li,{children:["Il faudra aussi mettre la facilit\xe9 d’extraction en balance avec l’utilit\xe9 d’extraire ce BC l\xe0.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si notre objectif c’est d’am\xe9liorer le time to market, mais qu’on commence par extraire un BC en microservice alors qu’il n’est presque jamais modifi\xe9, on n’aura pas beaucoup d’impact sur ce qu’on voulait faire."}),"\n",(0,i.jsxs)(n.li,{children:["On peut placer les BCs sur un graphique \xe0 deux axes : en abscisses l’int\xe9r\xeat de la d\xe9composition, et en ordonn\xe9e la facilit\xe9 de la d\xe9composition.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On va choisir en priorit\xe9 les BCs qui se retrouvent en haut \xe0 droite."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A propos de l’",(0,i.jsx)(n.strong,{children:"organisation des \xe9quipes"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Historiquement les \xe9quipes \xe9taient organis\xe9es par comp\xe9tences techniques : devs Java ensemble, DBA ensemble, testeurs ensemble etc.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour intervenir sur une fonctionnalit\xe9 il fallait passer par plusieurs \xe9quipes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["De nos jours, avec des mouvements comme DevOps, les sp\xe9cialit\xe9s sont pouss\xe9es vers les \xe9quipes de delivery, qui sont organis\xe9es autour de domaines fonctionnels, en ",(0,i.jsx)(n.em,{children:"vertical slices"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le r\xf4le des \xe9quipes centrales qui restent s’est transform\xe9 : au lieu de faire eux-m\xeames, ils aident les \xe9quipes delivery, en y envoyant des sp\xe9cialistes, organisant des formations, et en cr\xe9ant des ",(0,i.jsx)(n.strong,{children:"outils self-service"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour aller plus loin, l’auteur recommande ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Team Topologies"})})," et ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"The Devops Handbook"})}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut faire attention \xe0 ne pas chercher \xe0 copier tel quel les autres organisations, sans prendre en compte le contexte, la culture d’entreprise etc. On peut en revanche s’en inspirer.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le changement ",(0,i.jsx)(n.strong,{children:"prend du temps"}),". Par exemple, on peut int\xe9grer des ops dans des \xe9quipes de dev pour former petit \xe0 petit chacun aux probl\xe9matiques de l’autre."]}),"\n",(0,i.jsx)(n.li,{children:"Pour commencer le changement, on peut r\xe9unir des personnes de chaque \xe9quipe, et faire un mapping des responsabilit\xe9s li\xe9es \xe0 la delivery, en fonction de chaque \xe9quipe."}),"\n",(0,i.jsx)(n.li,{children:"Et ensuite on peut planifier un changement de responsabilit\xe9s li\xe9es aux \xe9quipes, et de la structure des \xe9quipes, sur 6 mois \xe0 un an par exemple."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Concernant la mont\xe9e en comp\xe9tence n\xe9cessaire pour la nouvelle organisation, l’auteur pr\xe9conise de laisser les d\xe9veloppeurs s’auto-\xe9valuer avec une note sur chaque comp\xe9tence n\xe9cessaire, et de les aider ensuite sur celles o\xf9 ils se sont mis un faible score.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ces auto-\xe9valuations devraient \xeatre priv\xe9es pour ne pas \xeatre fauss\xe9es."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour savoir si on va ",(0,i.jsx)(n.strong,{children:"dans la bonne direction"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut avoir quelques ",(0,i.jsx)(n.strong,{children:"m\xe9triques"})," quantitatives et qualitatives li\xe9es aux outcomes qu’on recherche avec la transition qu’on a entam\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les m\xe9triques quantitatives d\xe9pendent des objectifs.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si c'est le time to market, on peut mesurer le cycle time, le nombre de d\xe9ploiements et le failure rate."}),"\n",(0,i.jsx)(n.li,{children:"Si on cherche la scalabilit\xe9, on peut se reporter au dernier test de performance r\xe9alis\xe9."}),"\n",(0,i.jsx)(n.li,{children:"Attention aux m\xe9triques : elles peuvent pousser \xe0 des comportements non souhait\xe9s pour satisfaire la m\xe9trique."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Pour ce qui est des m\xe9triques qualitatives, il s’agit de v\xe9rifier si l’\xe9quipe est contente ou pas, s’ils sont d\xe9bord\xe9s etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut organiser des ",(0,i.jsx)(n.strong,{children:"checkpoints r\xe9guliers"})," pour voir o\xf9 on en est.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On v\xe9rifie que les raisons pour lesquelles on a commenc\xe9 la transition sont toujours l\xe0."}),"\n",(0,i.jsx)(n.li,{children:"On jette un œil aux m\xe9triques quantitatives pour voir l’avanc\xe9e."}),"\n",(0,i.jsx)(n.li,{children:"On demande du feedback qualitatif."}),"\n",(0,i.jsx)(n.li,{children:"On d\xe9cide d’\xe9ventuelles actions."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"3---splitting-the-monolith",children:"3 - Splitting the Monolith"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ce chapitre d\xe9crit des patterns pour migrer le code dans des micros de mani\xe8re incr\xe9mentale."}),"\n",(0,i.jsxs)(n.li,{children:["Un des crit\xe8res \xe0 prendre en compte pour le choix des patterns c’est le fait qu’on ait ou non ",(0,i.jsx)(n.strong,{children:"la possibilit\xe9 de changer le code du monolithe"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut avoir de nombreuses raisons pour ne pas le pouvoir :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si on n’a plus le code source du monolithe."}),"\n",(0,i.jsx)(n.li,{children:"Si le monolithe est \xe9crit dans une technologie pour laquelle on n’a pas les comp\xe9tences."}),"\n",(0,i.jsx)(n.li,{children:"Si on a peur de trop impacter les autres d\xe9veloppeurs du monolithe."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 on peut modifier le code du monolithe, si le code est en trop mauvais \xe9tat, \xe7a peut aussi parfois \xeatre plus rapide de le r\xe9\xe9crire dans le microservice plut\xf4t que de l’extraire."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Une des grandes difficult\xe9s c’est d’",(0,i.jsx)(n.strong,{children:"isoler le code qu’on veut extraire dans notre microservice"}),", c'est-\xe0-dire modulariser le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"En g\xe9n\xe9ral le code dans les monolithes est organis\xe9 autour de consid\xe9rations techniques et pas de domaines m\xe9tier, c’est pourtant \xe7a qu’on veut extraire."}),"\n",(0,i.jsxs)(n.li,{children:["Pour aider \xe0 faire \xe7a, l’auteur recommande le concept de ",(0,i.jsx)(n.em,{children:"seam"}),", qu’on trouve dans ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Working Effectively with Legacy Code"})})," de Michael Feathers.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.em,{children:"seam"})," est une d\xe9limitation autour d’une zone qu’on veut changer. On travaille ensuite \xe0 une nouvelle impl\xe9mentation de la fonctionnalit\xe9, et \xe0 la fin on remplace l’ancienne par la nouvelle."]}),"\n",(0,i.jsx)(n.li,{children:"\xc7a peut \xeatre plus ou moins grand, ici ce qui nous int\xe9resse c’est un bounded context."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["R\xe9organiser le code pour obtenir un ",(0,i.jsx)(n.strong,{children:"modular monolith"})," peut \xeatre suffisant pour ce qu’on recherche, en fonction de nos objectifs (cf. chapitre pr\xe9c\xe9dent).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Et \xe7a peut aussi \xeatre une premi\xe8re \xe9tape pour aller vers l’extraction d’\xe9ventuels microservices ensuite. C’est en tout cas le conseil de l’auteur."}),"\n",(0,i.jsx)(n.li,{children:"Pour autant, de nombreuses \xe9quipes pr\xe9f\xe8rent identifier une fonctionnalit\xe9, et la recoder dans un microservice sans refactorer le monolithe."}),"\n",(0,i.jsxs)(n.li,{children:["Dans tous les cas, l'auteur recommande une ",(0,i.jsx)(n.strong,{children:"approche incr\xe9mentale"})," : si la r\xe9\xe9criture du service se compte en jours ou semaines \xe7a peut \xeatre OK, si \xe7a se compte en mois, il vaut mieux adopter une approche plus incr\xe9mentale."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dans la suite du chapitre, on voit des patterns de migration, qui permettent d’extraire du code sous forme d’un microservice cohabitant avec le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Chaque pattern a des avantages et des inconv\xe9nients, il faut les comprendre pour pouvoir prendre \xe0 chaque fois le plus adapt\xe9."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"On extrait toujours les microservices un par un"}),", en apprenant des erreurs pour le prochain."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-strangler-fig-application",children:"Pattern: Strangler Fig Application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C’est un des patterns les plus utilis\xe9s, et \xe7a se base sur l’image d’un figuier qui s’implante sur un arbre existant, plante ses racines, et petit \xe0 petit “\xe9trangle” l’arbre qui finira par mourir sans ressources, laissant le figuier \xe0 sa place."}),"\n",(0,i.jsxs)(n.li,{children:["Cette technique permet d’avoir la nouvelle version en parall\xe8le de l’ancienne. On fait grossir petit \xe0 petit les fonctionnalit\xe9s de la nouvelle, puis on fait le switch quand le microservice est pr\xeat \xe0 remplacer la fonctionnalit\xe9 dans le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut faire la diff\xe9rence entre ",(0,i.jsx)(n.strong,{children:"deployment"})," et ",(0,i.jsx)(n.strong,{children:"release"})," : on int\xe8gre et d\xe9ploie r\xe9guli\xe8rement ce qu’on fait en production, pour \xe9viter les probl\xe8mes de merge et d\xe9risquer le plus possible de choses en production, mais on n’active la fonctionnalit\xe9 que quand elle est pr\xeate."]}),"\n",(0,i.jsxs)(n.li,{children:["Concr\xe8tement, vu qu’on est en train de sortir un microservice qui va tourner sur un processus \xe0 part, le switch se passe ",(0,i.jsx)(n.strong,{children:"au niveau r\xe9seau"})," : tant que le microservice n’est pas pr\xeat, les requ\xeates concernant sa fonctionnalit\xe9 vont vers le monolithe, et quand on veut le release, on les redirige vers lui."]}),"\n",(0,i.jsxs)(n.li,{children:["Si attendre que le microservice soit fini n’est pas assez incr\xe9mental pour nous, on peut aussi commencer \xe0 rediriger une partie des requ\xeates du monolithe vers le microservice, en fonction de ce qui a d\xe9j\xe0 \xe9t\xe9 impl\xe9ment\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a va par contre nous obliger \xe0 partager temporairement la m\xeame DB entre la fonctionnalit\xe9 dans le monolithe, et celle dans le microservice."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Cette technique a l’avantage de ",(0,i.jsx)(n.strong,{children:"ne pas avoir \xe0 toucher au monolithe"})," dans le cas o\xf9 la portion de fonctionnalit\xe9 qu’on sort est ",(0,i.jsx)(n.strong,{children:"autonome"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour \xe7a il faut qu'elle n'ait pas besoin de faire d’appel vers le monolithe, et que le monolithe n’ait pas besoin de faire d’appel vers elle non plus."}),"\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 la fonctionnalit\xe9 doit faire des appels vers le monolithe, il faudra que le monolithe expose des endpoints, et donc on devra le modifier."}),"\n",(0,i.jsxs)(n.li,{children:["Si c’est le monolithe qui doit faire des appels vers le microservice, alors on ne peut pas vraiment utiliser cette technique : on ne pourra pas faire le switch de la fonctionnalit\xe9 au niveau r\xe9seau.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On pourra \xe0 la place utiliser le pattern ",(0,i.jsx)(n.em,{children:"Branch by Abstraction"})," par exemple."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : HTTP Reverse Proxy"})," : HTTP permet tr\xe8s facilement de faire de la redirection.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Si notre monolithe re\xe7oit des requ\xeates HTTP, on va pouvoir mettre en place un proxy pour router les requ\xeates entre le monolithe et le microservice.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\xc9tape 1 : On met en place le proxy, et on le configure pour laisser passer les requ\xeates comme avant vers le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a nous permet de nous assurer que la latence additionnelle d’une \xe9tape r\xe9seau de plus ne pose pas probl\xe8me."}),"\n",(0,i.jsx)(n.li,{children:"On peut aussi d\xe8s cette \xe9tape tester le m\xe9canisme de redirection pour v\xe9rifier qu’il n’y aura pas de probl\xe8me \xe0 le faire."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"\xc9tape 2 : on impl\xe9mente progressivement la fonctionnalit\xe9 dans le microservice, vers lequel il n’y a aucun trafic."}),"\n",(0,i.jsxs)(n.li,{children:["\xc9tape 3 : Quand le microservice est pr\xeat, on redirige le trafic vers lui.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut remettre le trafic vers le monolithe s' il y a un probl\xe8me."}),"\n",(0,i.jsx)(n.li,{children:"Pour plus de facilit\xe9, la redirection peut \xeatre activ\xe9e avec un feature toggle."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour ce qui est du proxy lui-m\xeame, \xe7a va d\xe9pendre du protocole. Si on a du HTTP, on peut partir sur un serveur connu comme NGINX.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ca peut \xeatre par exemple sur le path : rediriger ",(0,i.jsx)(n.code,{children:"/invoice/"})," vers le monolithe, et ",(0,i.jsx)(n.code,{children:"/payroll/"})," vers le microservice."]}),"\n",(0,i.jsx)(n.li,{children:"Si on route sur un contenu se trouvant dans le body d’une requ\xeate POST (NDLR : comme GraphQL), \xe7a risque d’\xeatre un peu plus compliqu\xe9."}),"\n",(0,i.jsxs)(n.li,{children:["En tout cas, l'auteur ",(0,i.jsx)(n.strong,{children:"d\xe9conseille de coder soi-m\xeame son proxy"})," si on a besoin de quelque chose de custom.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les quelques fois o\xf9 il a essay\xe9, il a obtenu de tr\xe8s mauvaises performances."}),"\n",(0,i.jsx)(n.li,{children:"Il conseille de plut\xf4t partir d’un proxy existant comme NGINX, et de le personnaliser avec du code (du lua pour NGINX)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dans le cas o\xf9 on voudrait que notre microservice supporte un autre protocole que celui du monolithe (par exemple gRPC au lieu de SOAP), on pourrait envisager faire la traduction dans le proxy.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour l’auteur c’est une mauvaise id\xe9e : si on le fait pour plusieurs microservices, on va finir par complexifier ce proxy partag\xe9, alors qu’on voulait que les microservices soient ind\xe9pendants."}),"\n",(0,i.jsx)(n.li,{children:"L’auteur conseille plut\xf4t de faire ce mapping de protocole dans chacun des microservices qui en ont besoin, et \xe9ventuellement de faire en sorte qu’ils supportent les deux protocoles."}),"\n",(0,i.jsxs)(n.li,{children:["On peut aussi aller vers le ",(0,i.jsx)(n.strong,{children:"service mesh"})," o\xf9 chaque microservice a son proxy local, qui peut faire les redirections et mapping qu’il veut.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les outils les plus connus pour \xe7a sont Linkerd et Istio."}),"\n",(0,i.jsxs)(n.li,{children:["Square a mis en place le service mesh et en a fait ",(0,i.jsx)(n.a,{href:"https://squ.re/2nts1Gc",children:"un article"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : FTP"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L’entreprise suisse Homegate a utilis\xe9 le strangler fig pattern pour extraire des microservices, et en profiter pour changer le protocole utilis\xe9 pour uploader des fichiers : de FTP vers HTTP."}),"\n",(0,i.jsx)(n.li,{children:"Mais ils voulaient qu’il n’y ait pas de changement pour les utilisateurs."}),"\n",(0,i.jsx)(n.li,{children:"Donc ils ont mis en place une interception des appels FTP, et le remapping vers du HTTP pour taper dans le microservice responsable de \xe7a."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : Message Interception"})," : dans le cas de messages ",(0,i.jsx)(n.strong,{children:"asynchrones"})," \xe0 router vers le nouveau microservice.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Une premi\xe8re possibilit\xe9 est le ",(0,i.jsx)(n.strong,{children:"content-based routing"}),", o\xf9 un router va consommer tous les messages du message broker, et les queuer sur deux autres queues : une pour le monolithe, et une pour le microservice extrait.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ce pattern vient d’",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Enterprise Integration Patterns"})}),". Et de mani\xe8re g\xe9n\xe9rale l’auteur recommande ce livre pour des patterns de communication asynchrone."]}),"\n",(0,i.jsx)(n.li,{children:"L’avantage c’est qu’on n’a pas \xe0 toucher au monolithe."}),"\n",(0,i.jsx)(n.li,{children:"L’inconv\xe9nient c’est qu’on complexifie l\xe0 encore le syst\xe8me de communication plut\xf4t que les programmes. Donc l’auteur est plut\xf4t r\xe9ticent."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L’autre possibilit\xe9 c’est la ",(0,i.jsx)(n.strong,{children:"selective consumption"}),", o\xf9 le monolithe et le microservice consomment sur la m\xeame queue, mais s\xe9lectionnent les messages qui leur sont destin\xe9s.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L’avantage c’est qu’il n’y a pas de complexit\xe9 dans le m\xe9canisme de communication."}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les d\xe9savantages :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le message broker pourrait ne pas supporter la consommation s\xe9lective."}),"\n",(0,i.jsx)(n.li,{children:"Il faut d\xe9ployer les changements dans le monolithe et dans le microservice en m\xeame temps pour que la consommation se passe bien."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dedans le cas o\xf9 on veut ",(0,i.jsx)(n.strong,{children:"ajouter des fonctionnalit\xe9s"})," ou fixer des bugs en m\xeame temps qu’on impl\xe9mente le microservice, il faut bien garder en t\xeate que ",(0,i.jsx)(n.strong,{children:"le rollback sera alors plus difficile"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il n’y a pas de solution facile : soit on accepte que le rollback sera plus compliqu\xe9 \xe0 faire, soit on freeze les features sur la partie extraite en microservice tant que l’extraction est en cours."}),"\n"]}),"\n"]}),"\n"]})]})}e=s.hmd(e),(0,r.j)({Content:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)},nextraLayout:l.ZP,hot:e.hot,pageOpts:{filePath:"pages/books/monolith-to-microservices.md",route:"/books/monolith-to-microservices",frontMatter:{},pageMap:[{kind:"Meta",data:{index:"Introduction",books:"Reading notes"}},{kind:"Folder",name:"books",route:"/books",children:[{kind:"Meta",data:{"continuous-discovery-habits":"Continuous Discovery Habits","designing-data-intensive-applications":"Designing Data-Intensive Applications","get-your-hands-dirty-on-clean-architecture":"Get Your Hands Dirty on Clean Architecture","learning-domain-driven-design":"Learning Domain-Driven Design","monolith-to-microservices":"Monolith to Microservices",refactoring:"Refactoring: Improving the Design of Existing Code","reinventing-organizations":"Reinventing Organizations","the-design-of-web-apis":"The Design of Web APIs","unit-testing":"Unit Testing: Principles, Practices, and Patterns"}},{kind:"MdxPage",name:"continuous-discovery-habits",route:"/books/continuous-discovery-habits"},{kind:"MdxPage",name:"designing-data-intensive-applications",route:"/books/designing-data-intensive-applications"},{kind:"MdxPage",name:"get-your-hands-dirty-on-clean-architecture",route:"/books/get-your-hands-dirty-on-clean-architecture"},{kind:"MdxPage",name:"learning-domain-driven-design",route:"/books/learning-domain-driven-design"},{kind:"MdxPage",name:"monolith-to-microservices",route:"/books/monolith-to-microservices"},{kind:"MdxPage",name:"refactoring",route:"/books/refactoring"},{kind:"MdxPage",name:"reinventing-organizations",route:"/books/reinventing-organizations"},{kind:"MdxPage",name:"the-design-of-web-apis",route:"/books/the-design-of-web-apis"},{kind:"MdxPage",name:"unit-testing",route:"/books/unit-testing"}]},{kind:"MdxPage",name:"index",route:"/"}],headings:[{depth:1,value:"Monolith to Microservices: : Evolutionary Patterns to Transform Your Monolith",id:"monolith-to-microservices--evolutionary-patterns-to-transform-your-monolith"},{depth:2,value:"1 - Just Enough Microservices",id:"1---just-enough-microservices"},{depth:2,value:"2 - Planning a Migration",id:"2---planning-a-migration"},{depth:2,value:"3 - Splitting the Monolith",id:"3---splitting-the-monolith"},{depth:3,value:"Pattern: Strangler Fig Application",id:"pattern-strangler-fig-application"}],flexsearch:{codeblocks:!0},title:"Monolith to Microservices: : Evolutionary Patterns to Transform Your Monolith"},themeConfig:t.Z,pageNextRoute:"/books/monolith-to-microservices",pageOptsChecksum:void 0,dynamicMetaModules:[]})}},function(e){e.O(0,[774,254,888,179],function(){return e(e.s=7579)}),_N_E=e.O()}]);